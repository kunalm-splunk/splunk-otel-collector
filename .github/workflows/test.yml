name: build-and-test

on:
  push:
  pull_request:

concurrency:
  group: build-and-test-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: 3.8.5
  PIP_VERSION: 20.2.4
  REQUIREMENTS_PATH: "internal/buildscripts/packaging/tests/requirements.txt"
  RESULT_PATH: "~/testresults"
  GO_VERSION: 1.17.2

jobs:
  setup-environment:
    name: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Installing dependency
        run: |
          make install-tools
  
  cross-compile:
    name: cross-compile
    runs-on: ubuntu-latest
    needs: [setup-environment]
    strategy:
      matrix:
        SYS_BINARIES: [ "binaries-windows_amd64" ]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Build Collector
        run: |
          make ${{ matrix.SYS_BINARIES }}
      
      - name: Uploading binaries
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.SYS_BINARIES }}
          path: |
            ./bin/*
  
  docker-otelcol-windows:
    name: docker-otelcol-windows
    runs-on: windows-latest
    needs: [cross-compile]
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Downloading binaries-windows_amd64
        uses: actions/download-artifact@v2
        with:
          name: binaries-windows_amd64
          path: ./bin

      - name: Build docker image
        run: |
          $ErrorActionPreference = 'Stop'
          Copy-Item .\bin\otelcol_windows_amd64.exe .\cmd\otelcol\otelcol.exe
          Copy-Item .\bin\translatesfx_windows_amd64.exe .\cmd\otelcol\translatesfx.exe
          docker build -t otelcol-windows --build-arg SMART_AGENT_RELEASE=$((Get-Content internal\buildscripts\packaging\smart-agent-release.txt).TrimStart("v")) -f .\cmd\otelcol\Dockerfile.windows .\cmd\otelcol\
          Remove-Item .\cmd\otelcol\otelcol.exe
          Remove-Item .\cmd\otelcol\translatesfx.exe

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Caching dependency
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: RUN test.
        env:
          SPLUNK_OTEL_COLLECTOR_IMAGE: "otelcol-windows:latest"
        run: |
          cd ./tests/receivers/smartagent/telegraf-windowsperfcounters
          go test -v
